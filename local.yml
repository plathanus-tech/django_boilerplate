version: "3.3"
services:
  redis:
    image: "redis"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server
    volumes:
      - cache:/data

  django: &django
    build:
      dockerfile: infra/app/Dockerfile
      context: .
    volumes:
      - ./src:/app/src
      - ./storage/static:/app/storage/static
      - ./storage/static:/app/storage/media
    ports:
      - ${DJANGO_HTTP_PORT:-8000}:${DJANGO_HTTP_PORT:-8000}
    env_file:
      - .env.dev

    command: python3 manage.py runserver 0.0.0.0:${DJANGO_HTTP_PORT:-8000}
    depends_on:
      - db
      - redis
    environment:
      - SQL_HOST=db
      - REDIS_HOST=redis

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${SQL_PORT}:${SQL_PORT}"

    command: ["postgres", "-c", "log_statement=all", "-p", "${SQL_PORT}"]
    environment:
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_DB: ${SQL_DATABASE}

  celery-beat:
    <<: *django
    command: python -m celery -A app beat
    entrypoint: []
    ports: []

  celery-worker:
    <<: *django
    command: python -m celery -A app worker -P solo --concurrency 1 --events
    entrypoint: []
    ports: []

volumes:
  staticfiles:
  mediafiles:
  postgres_data:
  cache:
  .:
